{"version":3,"sources":["components/common/Box/index.js","components/common/Box/Title.js","components/common/Input/index.js","components/common/Select/index.js","reducers/creditParams.js","utils/date.js","utils/common.js","utils/calculatePayments.js","reducers/paymentSchedule.js","components/CreditForm/index.js","components/common/Summary/index.js","components/SummaryMonthCount/index.js","components/SummaryPayment/index.js","components/SummaryOverpayment/index.js","components/PaymentsChart/index.js","components/OverpaymentChart/index.js","components/PaymentScheduleTable/index.js","routes.js","pages/Main/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","index.js","store.js"],"names":["Box","children","Paper","className","Title","props","component","variant","color","Input","TextField","size","fullWidth","Select","otherProps","select","CALCULATING_TYPE","initialCreditParams","calculatingType","creditSum","creditPercent","paymentPerMonth","creditPeriod","creditParams","state","action","type","params","formatDate","date","splittedDate","toISOString","substr","split","getNextMonth","newDate","Date","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","priceFormat","value","Math","round","toLocaleString","roundValue","calculatePercentage","base","startDate","addFormattedFields","row","dateFormatted","paymentRounded","payment","paymentByPercentsRounded","paymentByPercents","paymentByCreditRounded","paymentByCredit","overpaymentRounded","overpayment","creditLeftRounded","creditLeft","calculateOnePayment","previousRow","percentage","currentRow","number","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","daysCountInPreviousMonth","daysCountInCurrentMonth","calculatePayments","paymentSchedule","creditPercentInMonth","pow","calculateAnnuityPayment","monthCount","length","nextPayment","push","firstPaymentRow","lastRow","dataByMonths","summary","overpaymentPercent","lastPaymentDate","onPercentage","initialState","data","CreditForm","useSelector","dispatch","useDispatch","onSubmit","values","parseFloat","initialValues","render","handleSubmit","noValidate","autoComplete","container","spacing","item","xs","md","lg","name","input","label","justify","Summary","icon","iconType","title","units","footer","classnames","SummaryMonthCount","SummaryPayment","SummaryOverpayment","PaymentsChart","chartData","filter","index","style","width","height","barCategoryGap","dataKey","unit","stackId","fill","OverpaymentChart","PaymentScheduleTable","stickyHeader","align","map","key","routes","path","menuIcon","Header","mb","position","route","exact","Menu","open","button","Link","to","primary","Footer","mt","Dashboard","maxWidth","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"yfAKe,SAASA,EAAT,GAA4B,IAAbC,EAAY,EAAZA,SAC1B,OAAO,kBAACC,EAAA,EAAD,CAAOC,UAAU,OAAOF,G,aCHpB,SAASG,EAAMC,GAC1B,OACI,yBAAKF,UAAU,cACX,kBAAC,IAAD,CAAeG,UAAU,KAAKC,QAAQ,KAAKC,MAAM,WAC5CH,EAAMJ,W,aCJR,SAASQ,EAAMJ,GAC1B,OAAO,kBAACK,EAAA,EAAD,aAAWH,QAAQ,WAAWI,KAAK,QAAQC,WAAS,GAAKP,I,WCDrD,SAASQ,EAAT,GAA8C,IAA5BZ,EAA2B,EAA3BA,SAAaa,EAAc,4BACxD,OACI,kBAAC,IAAD,aAAcC,QAAM,EAACR,QAAQ,WAAWI,KAAK,QAAQC,WAAS,GAAKE,GAC9Db,G,soBCNb,IAEae,EACE,YADFA,EAEG,aAUT,IAAMC,EAAsB,CAC/BC,gBAAiBF,EACjBG,UAAW,IACXC,cAAe,IACfC,gBAAiB,IACjBC,aAAc,IAGH,SAASC,IAAmD,IAAtCC,EAAqC,uDAA7BP,EAAqBQ,EAAQ,uCACtE,OAAQA,EAAOC,MACX,IAxBkB,oBAyBd,OAAO,EAAP,GAAYD,EAAOE,QACvB,QACI,OAAOH,G,yBCzBNI,EAAa,SAACC,GACvB,IACMC,EADUD,EAAKE,cAAcC,OAAO,EAAG,IAChBC,MAAM,KACnC,MAAM,GAAN,OAAUH,EAAa,GAAvB,YAA6BA,EAAa,GAA1C,YAAgDA,EAAa,KAGpDI,EAAe,SAACL,GACzB,IAAMM,EAAU,IAAIC,KAAKP,GACnBQ,EAAMR,EAAKS,UAKjB,OAJAH,EAAQI,SAASV,EAAKW,WAAa,GAC/BL,EAAQG,YAAcD,GACtBF,EAAQM,QAAQ,GAEbN,GAGEO,EAAqB,SAACC,GAC/B,OAAIA,EAAO,IAAM,EACN,IAEJ,KAGEC,EAA2B,SAACC,EAAOC,GAAR,OAAiBA,EAAMD,GAzBnC,OCArB,SAASE,EAAYC,GAExB,OADqBC,KAAKC,MAAMF,GACZG,eAAe,SAGhC,SAASC,EAAWJ,GACvB,OAAOC,KAAKC,MAAMF,GAGf,SAASK,EAAoBL,EAAOM,GACvC,OAAOL,KAAKC,MAAOF,EAAQM,EAAQ,KAAS,ICNhD,IACMC,EAAY,IAAInB,KAEtB,SAASoB,EAAmBC,GACxBA,EAAIC,cAAgB9B,EAAW6B,EAAI5B,MACnC4B,EAAIE,eAAiBP,EAAWK,EAAIG,SACpCH,EAAII,yBAA2BT,EAAWK,EAAIK,mBAC9CL,EAAIM,uBAAyBX,EAAWK,EAAIO,iBAC5CP,EAAIQ,mBAAqBb,EAAWK,EAAIS,aACxCT,EAAIU,kBAAoBf,EAAWK,EAAIW,YAG3C,SAASC,EAAoBC,EAAaV,EAASW,GAC/C,IAAMC,EAAa,CACfC,OAAQH,EAAYG,OAAS,EAC7B5C,KAAMK,EAAaoC,EAAYzC,MAC/B+B,WAGEc,EAA0BhC,EAAmB4B,EAAYzC,KAAK8C,eAC9DC,EAAyBlC,EAAmB8B,EAAW3C,KAAK8C,eAC9Db,EAAoB,EAGxB,GAAoC,KAAhCQ,EAAYzC,KAAKW,YAAqBkC,IAA4BE,EAAwB,CAC1F,IAAMC,EAA2BjC,EAC7B0B,EAAYzC,KACZ,IAAIO,KAAJ,UAAYkC,EAAYzC,KAAK8C,cAA7B,YAEEG,EACFlC,EAAyB,IAAIR,KAAJ,UAAYoC,EAAW3C,KAAK8C,cAA5B,WAAoDH,EAAW3C,MAAQ,EAKpGiC,EAH0CQ,EAAYF,WAAaG,EAAcG,EAI1CG,EAHEP,EAAYF,WAAaG,EAAcK,EAI1CE,MACnC,CAGHhB,EAD0BQ,EAAYF,WAAaG,EAAcG,EAC1B9B,EAAyB0B,EAAYzC,KAAM2C,EAAW3C,MAI7FyC,EAAYF,YAAcR,IAC1BY,EAAWZ,QAAUU,EAAYF,WAAaN,GAGlD,IAAME,EAAkBQ,EAAWZ,QAAUE,EAS7C,OAPAU,EAAWV,kBAAoBA,EAC/BU,EAAWR,gBAAkBA,EAC7BQ,EAAWN,YAAcI,EAAYJ,YAAcJ,EACnDU,EAAWJ,WAAaE,EAAYF,WAAaJ,EAEjDR,EAAmBgB,GAEZA,EAGI,SAASO,EAAT,GAMX,IAAD,IALC7D,uBAKD,MALmBF,EAKnB,EAJCG,EAID,EAJCA,UACAC,EAGD,EAHCA,cAGD,IAFCE,oBAED,MAFgB,EAEhB,EADCD,EACD,EADCA,gBAEM2D,EAAkB,GAClBT,EAAanD,EAAgB,IAE/BF,IAAoBF,IACpBK,EAyCR,YAA8E,IAA3CF,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,cAAeE,EAAgB,EAAhBA,aACnD2D,EAAuB7D,EAAgB,GAAK,IAC5C8D,EAAMjC,KAAKiC,IAAI,EAAID,EAAsB3D,GAG/C,OAAO8B,EADgBjC,GADA8D,EAAuBC,GAAQA,EAAM,KA5CtCC,CAAwB,CAAEhE,YAAWC,gBAAeE,kBAG1E0D,EAAgB,GAAK,CACjBP,OAAQ,EACR5C,KAAM0B,EACNK,QAAS,EACTE,kBAAmB,EACnBE,gBAAiB,EACjBE,YAAa,EACbE,WAAYjD,GAGhBqC,EAAmBwB,EAAgB,IAKnC,IAHA,IAAIZ,EAAajD,EACbiE,EAAa,EAEVJ,EAAgBK,OA1FF,KA0F+BjB,EAAa,GAAG,CAChE,IAAMkB,EAAcjB,EAAoBW,EAAgBI,GAAa/D,EAAiBkD,GACtFS,EAAgBO,KAAKD,GACrBlB,EAAakB,EAAYlB,WACzBgB,GAAc,EAGlB,IAAMI,EAAkBR,EAAgB,GAClCS,EAAUT,EAAgBA,EAAgBK,OAAS,GAEzD,MAAO,CACHK,aAAcV,EACdW,QAAS,CACLzB,YAAauB,EAAQvB,YACrB0B,mBAAoBvC,EAAoBoC,EAAQvB,YAAa/C,GAC7DiE,WAAYJ,EAAgBK,OAAS,EACrCQ,gBAAiBJ,EAAQ5D,KACzB+B,QAASvC,EACTyE,aAAczC,EAAoBmC,EAAgB1B,kBAAmBzC,KCpGjF,IAAM0E,EAAehB,EAAkB9D,GAExB,SAAS+D,IAA+C,IAA/BxD,EAA8B,uDAAtBuE,EAActE,EAAQ,uCAClE,OAAQA,EAAOC,MACX,IAbqB,uBAcjB,OAAOD,EAAOuE,KAClB,QACI,OAAOxE,GCJJ,SAASyE,IAAc,IAC1B1E,EAAiB2E,aAAY,SAAC1E,GAAD,OAAWA,KAAxCD,aACF4E,EAAWC,cAkBjB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,0GACA,kBAAC,IAAD,CACIC,SApBK,SAACC,GACd,IAAMnF,EAAYoF,WAAWD,EAAOnF,WAC9BC,EAAgBmF,WAAWD,EAAOlF,eAClCC,EAAkBkF,WAAWD,EAAOjF,iBACpCC,EAAeiF,WAAWD,EAAOhF,cAEjC0D,EAAkBD,EAAkB,CACtC7D,gBAAiBoF,EAAOpF,gBACxBC,YACAC,gBACAC,kBACAC,iBAEJ6E,ED1BG,CACHzE,KAJqB,uBAKrBsE,KCwB4BhB,KAQpBwB,cAAejF,EACfkF,OAAQ,gBAAGC,EAAH,EAAGA,aAAcJ,EAAjB,EAAiBA,OAAjB,OACJ,0BAAMD,SAAUK,EAAcC,YAAU,EAACC,aAAa,OAClD,kBAAC,IAAD,CAASC,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAOC,KAAK,oBACP,gBAAGC,EAAH,EAAGA,MAAH,OACG,kBAACvG,EAAD,eAAYuG,EAAZ,CAAmBC,MAAM,oFACrB,kBAAC,IAAD,CAAarE,MAAOhC,GAApB,0FAGA,kBAAC,IAAD,CAAagC,MAAOhC,GAApB,+FAOhB,kBAAC,IAAD,CAAS+F,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAOC,KAAK,cACP,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC3G,EAAD,eAAW2G,EAAX,CAAkBC,MAAM,mFAGhD,kBAAC,IAAD,CAASN,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAOC,KAAK,kBACP,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC3G,EAAD,eAAW2G,EAAX,CAAkBC,MAAM,2GAGhD,kBAAC,IAAD,CAASN,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BZ,EAAOpF,kBAAoBF,GACxB,kBAAC,IAAD,CAAOmG,KAAK,oBACP,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC3G,EAAD,eAAW2G,EAAX,CAAkBC,MAAM,gHAG/Cf,EAAOpF,kBAAoBF,GACxB,kBAAC,IAAD,CAAOmG,KAAK,iBACP,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC3G,EAAD,eAAW2G,EAAX,CAAkBC,MAAM,mGAKxD,kBAAC,IAAD,CAASR,WAAS,EAACS,QAAQ,WAAWR,QAAS,GAC3C,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAAC,IAAD,CAAW3G,QAAQ,YAAYC,MAAM,UAAUI,WAAS,EAACc,KAAK,UAA9D,uE,uDC3EjB,SAAS6F,GAAT,GAAmE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,MAAO1E,EAAwB,EAAxBA,MAAO2E,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACnE,OACI,kBAAC,EAAD,KACI,yBACIzH,UAAW0H,IAAW,gBAAD,uCACCJ,GAAaA,KAGlCD,GAEL,yBAAKrH,UAAU,oBACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAeG,UAAU,KAAKC,QAAQ,QAAQC,MAAM,iBAC/CkH,IAGT,kBAAC,IAAD,CAAepH,UAAU,IAAIC,QAAQ,MAChCyC,EACD,kBAAC,IAAD,CAAe1C,UAAU,OAAOC,QAAQ,MACnC,IACAoH,KAIb,kBAAC,KAAD,MACA,yBAAKxH,UAAU,mBACX,kBAAC,IAAD,CAAeG,UAAU,IAAIE,MAAM,gBAAgBD,QAAQ,SACtDqH,KC5BN,SAASE,KAAqB,IAElBnC,EACnBO,aAAY,SAAC1E,GAAD,OAAWA,KADvBwD,gBAAmBW,QAEvB,OACI,kBAAC,GAAD,CACI+B,MAAM,sEACNF,KAAM,kBAAC,IAAD,MACNxE,MAAO2C,EAAQP,WACfuC,MAAM,sBACNC,OAAM,6GAAwBhG,EAAW+D,EAAQE,kBACjD4B,SAAS,Y,yBCXN,SAASM,KAAkB,IAEfpC,EACnBO,aAAY,SAAC1E,GAAD,OAAWA,KADvBwD,gBAAmBW,QAEvB,OACI,kBAAC,GAAD,CACI+B,MAAM,0GACNF,KAAM,kBAAC,KAAD,MACNxE,MAAOD,EAAY4C,EAAQ/B,SAC3B+D,MAAM,sBACNC,OAAM,UAAKjC,EAAQG,aAAb,+SACN2B,SAAS,S,yBCXN,SAASO,KAAsB,IAEnBrC,EACnBO,aAAY,SAAC1E,GAAD,OAAWA,KADvBwD,gBAAmBW,QAEvB,OACI,kBAAC,GAAD,CACI+B,MAAM,yDACNF,KAAM,kBAAC,KAAD,MACNxE,MAAK,UAAKD,EAAY4C,EAAQzB,cAC9ByD,MAAM,sBACNC,OAAM,6BAASjC,EAAQC,mBAAjB,4FACN6B,SAAS,Y,aCXN,SAASQ,KAAiB,IAG/BC,EAFsBhC,aAAY,SAAC1E,GAAD,OAAWA,KAA3CwD,gBAE0BU,aAAayC,QAAO,SAACpB,EAAMqB,GAAP,OAA2B,IAAVA,KAEvE,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,2MACA,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,MACjC,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAUC,eAAe,KAAKxC,KAAMkC,GAChC,kBAAC,KAAD,CAAOO,QAAQ,kBACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CACItB,KAAK,6HACLuB,KAAK,uBACLD,QAAQ,2BACRE,QAAQ,IACRC,KAAK,YAET,kBAAC,KAAD,CACIzB,KAAK,sJACLuB,KAAK,uBACLD,QAAQ,yBACRE,QAAQ,IACRC,KAAK,gBC3BlB,SAASC,KAAoB,IAGlCX,EAFsBhC,aAAY,SAAC1E,GAAD,OAAWA,KAA3CwD,gBAE0BU,aAAayC,QAAO,SAACpB,EAAMqB,GAAP,OAA2B,IAAVA,KAEvE,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,oGACA,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,MACjC,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWvC,KAAMkC,GACb,kBAAC,KAAD,CAAOO,QAAQ,kBACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAMtB,KAAK,yDAAYuB,KAAK,uBAAQD,QAAQ,2B,6DCRrD,SAASK,KAAwB,IACpC9D,EAAoBkB,aAAY,SAAC1E,GAAD,OAAWA,KAA3CwD,gBAER,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,8FACA,kBAAC,KAAD,CAAUrE,KAAK,QAAQoI,cAAY,GAC/B,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,eACA,kBAAC,KAAD,iCACA,kBAAC,KAAD,CAAcC,MAAM,SAApB,wCACA,kBAAC,KAAD,CAAcA,MAAM,SAApB,uEACA,kBAAC,KAAD,CAAcA,MAAM,SAApB,2DACA,kBAAC,KAAD,CAAcA,MAAM,SAApB,0DACA,kBAAC,KAAD,CAAcA,MAAM,SAApB,+EAGR,kBAAC,KAAD,KACKhE,EAAgBU,aAAauD,KAAI,SAACxF,GAAD,OAC9B,kBAAC,KAAD,CAAayF,IAAKzF,EAAIgB,QAClB,kBAAC,KAAD,KAAehB,EAAIgB,OAAnB,KACA,kBAAC,KAAD,KAAe7C,EAAW6B,EAAI5B,OAC9B,kBAAC,KAAD,CAAcmH,MAAM,SAASjG,EAAYU,EAAIG,UAC7C,kBAAC,KAAD,CAAcoF,MAAM,SAASjG,EAAYU,EAAIK,oBAC7C,kBAAC,KAAD,CAAckF,MAAM,SAASjG,EAAYU,EAAIO,kBAC7C,kBAAC,KAAD,CAAcgF,MAAM,SAASjG,EAAYU,EAAIS,cAC7C,kBAAC,KAAD,CAAc8E,MAAM,SAASjG,EAAYU,EAAIW,oBClCzE,IAee+E,GAfA,CACX,CACIC,KAAM,IACN9I,UCGA,oCACI,kBAAC,IAAD,CAASuG,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC9B,kBAACjB,EAAD,QAGR,kBAAC,IAAD,CAASY,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAACY,GAAD,OAEJ,kBAAC,IAAD,CAASf,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAACa,GAAD,OAEJ,kBAAC,IAAD,CAAShB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7B,kBAACc,GAAD,QAGR,kBAAC,IAAD,CAASnB,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,IACd,kBAAC6B,GAAD,QAGR,kBAAC,IAAD,CAAShC,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,IACd,kBAACiB,GAAD,QAGR,kBAAC,IAAD,CAASpB,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAI,IACd,kBAAC,GAAD,SD/BZU,MAAO,4HACP2B,SAAU,kBAAC,IAAD,OAEd,CACID,KAAM,iBACN9I,UEbG,iDFcHoH,MAAO,gHACP2B,SAAU,kBAAC,IAAD,Q,yCGTH,SAASC,KACpB,OACI,kBAAC,KAAD,CAAQC,GAAI,GACR,kBAAC,KAAD,CAAWC,SAAS,UAChB,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAelJ,UAAU,KAAKC,QAAQ,KAAKC,MAAM,WAC7C,kBAAC,IAAD,KACK2I,GAAOF,KAAI,SAACQ,EAAOrB,GAAR,OACR,kBAAC,IAAD,CAAOc,IAAKd,EAAOgB,KAAMK,EAAML,KAAMM,OAAK,GACrCD,EAAM/B,e,8FCN5B,SAASiC,KACpB,OACI,kBAAC,KAAD,CAAWpJ,QAAQ,YAAYJ,UAAU,OAAOyJ,MAAM,GAClD,yBAAKzJ,UAAU,kBACf,kBAAC,KAAD,MACA,kBAAC,KAAD,KACKgJ,GAAOF,KAAI,SAACQ,EAAOrB,GAAR,OACR,kBAAC,KAAD,CAAac,IAAKd,EAAOyB,QAAM,EAACvJ,UAAWwJ,IAAMC,GAAIN,EAAML,MACvD,kBAAC,KAAD,KAAkBK,EAAMJ,UACxB,kBAAC,KAAD,CAAiBW,QAASP,EAAM/B,cCjBzC,SAASuC,KACpB,OACI,kBAAC,KAAD,CAAQC,GAAI,EAAGX,GAAI,GACf,kBAAC,IAAD,CAAehJ,QAAQ,QAAQC,MAAM,gBAAgBwI,MAAM,UACtD,kBADL,eAEgB,IAAI5G,MAAOuC,gBCGxB,SAASwF,KACpB,OACI,kBAAC,IAAD,KACI,yBAAKhK,UAAU,iBACX,kBAAC,IAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,eACX,kBAACmJ,GAAD,MACA,8BACI,kBAAC,IAAD,CAAcc,SAAS,MACnB,kBAAC,IAAD,KACKjB,GAAOF,KAAI,SAACQ,EAAOrB,GAAR,OACR,kBAAC,IAAD,CAAOc,IAAKd,EAAOgB,KAAMK,EAAML,KAAMM,OAAK,GACrCD,EAAMnJ,eAInB,kBAAC2J,GAAD,W,cCrBtBI,GCJiB,WACnB,OAAOC,aACHC,aAAgB,CACZhJ,eACAyD,oBAEJwF,OAAOC,8BAAgCD,OAAOC,gCDFxCC,GAEdC,IAASlE,OACL,kBAAC,IAAMmE,WAAP,KACI,kBAAC,IAAD,CAAUP,MAAOA,IACb,kBAAC,GAAD,QAGRQ,SAASC,eAAe,W","file":"static/js/main.4985d680.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport 'src/components/common/Box/Box.css';\n\nexport default function Box({ children }) {\n    return <Paper className=\"box\">{children}</Paper>;\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <div className=\"box__title\">\n            <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\">\n                {props.children}\n            </MuiTypography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n    return <TextField variant=\"outlined\" size=\"small\" fullWidth {...props} />;\n}\n","import React from 'react';\nimport MuiTextField from '@material-ui/core/TextField';\n\nexport default function Select({ children, ...otherProps }) {\n    return (\n        <MuiTextField select variant=\"outlined\" size=\"small\" fullWidth {...otherProps}>\n            {children}\n        </MuiTextField>\n    );\n}\n","const SET_CREDIT_PARAMS = 'SET_CREDIT_PARAMS';\n\nexport const CALCULATING_TYPE = {\n    BY_PERIOD: 'by_period',\n    BY_PAYMENT: 'by_payment',\n};\n\nexport function setCreditParams(params) {\n    return {\n        type: SET_CREDIT_PARAMS,\n        params,\n    };\n}\n\nexport const initialCreditParams = {\n    calculatingType: CALCULATING_TYPE.BY_PAYMENT,\n    creditSum: 1000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 50000,\n    creditPeriod: 60,\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAMS:\n            return { ...action.params };\n        default:\n            return state;\n    }\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatDate = (date) => {\n    const strDate = date.toISOString().substr(0, 10);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n};\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU');\n}\n\nexport function roundValue(value) {\n    return Math.round(value);\n}\n\nexport function calculatePercentage(value, base) {\n    return Math.round((value / base) * 10000) / 100;\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n","import { getNextMonth, getDaysCountInYear, getDaysCountBetweenDates, formatDate } from 'src/utils/date';\nimport { roundValue, calculatePercentage } from 'src/utils/common';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = new Date();\n\nfunction addFormattedFields(row) {\n    row.dateFormatted = formatDate(row.date);\n    row.paymentRounded = roundValue(row.payment);\n    row.paymentByPercentsRounded = roundValue(row.paymentByPercents);\n    row.paymentByCreditRounded = roundValue(row.paymentByCredit);\n    row.overpaymentRounded = roundValue(row.overpayment);\n    row.creditLeftRounded = roundValue(row.creditLeft);\n}\n\nfunction calculateOnePayment(previousRow, payment, percentage) {\n    const currentRow = {\n        number: previousRow.number + 1,\n        date: getNextMonth(previousRow.date),\n        payment,\n    };\n\n    const daysCountInPreviousYear = getDaysCountInYear(previousRow.date.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(currentRow.date.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда платежный месяц выпадает на границу високосного и невисокоснова годов\n    // В таком случае стоимость одного дня для платежного месяца рассчитывается по разному\n    if (previousRow.date.getMonth() === 11 && daysCountInPreviousYear !== daysCountInCurrentYear) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            previousRow.date,\n            new Date(`${previousRow.date.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth =\n            getDaysCountBetweenDates(new Date(`${currentRow.date.getFullYear()}-01-01`), currentRow.date) + 1;\n\n        const oneDayCreditCostForPreviousMonth = (previousRow.creditLeft * percentage) / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = (previousRow.creditLeft * percentage) / daysCountInCurrentYear;\n\n        paymentByPercents =\n            oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth +\n            oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth;\n    } else {\n        // обычный случай\n        const oneDayCreditCost = (previousRow.creditLeft * percentage) / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(previousRow.date, currentRow.date);\n    }\n\n    // последний платежный месяц\n    if (previousRow.creditLeft <= payment) {\n        currentRow.payment = previousRow.creditLeft + paymentByPercents;\n    }\n\n    const paymentByCredit = currentRow.payment - paymentByPercents;\n\n    currentRow.paymentByPercents = paymentByPercents;\n    currentRow.paymentByCredit = paymentByCredit;\n    currentRow.overpayment = previousRow.overpayment + paymentByPercents;\n    currentRow.creditLeft = previousRow.creditLeft - paymentByCredit;\n\n    addFormattedFields(currentRow);\n\n    return currentRow;\n}\n\nexport default function calculatePayments({\n    calculatingType = CALCULATING_TYPE.BY_PAYMENT,\n    creditSum,\n    creditPercent,\n    creditPeriod = 1,\n    paymentPerMonth,\n}) {\n    const paymentSchedule = [];\n    const percentage = creditPercent / 100;\n\n    if (calculatingType === CALCULATING_TYPE.BY_PERIOD) {\n        paymentPerMonth = calculateAnnuityPayment({ creditSum, creditPercent, creditPeriod });\n    }\n\n    paymentSchedule[0] = {\n        number: 0,\n        date: startDate,\n        payment: 0,\n        paymentByPercents: 0,\n        paymentByCredit: 0,\n        overpayment: 0,\n        creditLeft: creditSum,\n    };\n\n    addFormattedFields(paymentSchedule[0]);\n\n    let creditLeft = creditSum;\n    let monthCount = 0;\n\n    while (paymentSchedule.length < MAX_MONTHS_COUNT && creditLeft > 0) {\n        const nextPayment = calculateOnePayment(paymentSchedule[monthCount], paymentPerMonth, percentage);\n        paymentSchedule.push(nextPayment);\n        creditLeft = nextPayment.creditLeft;\n        monthCount += 1;\n    }\n\n    const firstPaymentRow = paymentSchedule[1];\n    const lastRow = paymentSchedule[paymentSchedule.length - 1];\n\n    return {\n        dataByMonths: paymentSchedule,\n        summary: {\n            overpayment: lastRow.overpayment,\n            overpaymentPercent: calculatePercentage(lastRow.overpayment, creditSum),\n            monthCount: paymentSchedule.length - 1, // вычитаем первую строку с датой начала кредита\n            lastPaymentDate: lastRow.date,\n            payment: paymentPerMonth,\n            onPercentage: calculatePercentage(firstPaymentRow.paymentByPercents, paymentPerMonth),\n        },\n    };\n}\n\nfunction calculateAnnuityPayment({ creditSum, creditPercent, creditPeriod }) {\n    const creditPercentInMonth = creditPercent / 12 / 100;\n    const pow = Math.pow(1 + creditPercentInMonth, creditPeriod);\n    const annuityFactor = (creditPercentInMonth * pow) / (pow - 1);\n    const annuityPayment = creditSum * annuityFactor;\n    return roundValue(annuityPayment);\n}\n","import calculatePayments from 'src/utils/calculatePayments';\nimport { initialCreditParams } from 'src/reducers/creditParams';\n\nconst SET_PAYMENT_SCHEDULE = 'SET_PAYMENT_SCHEDULE';\n\nexport function setPaymentSchedule(data) {\n    return {\n        type: SET_PAYMENT_SCHEDULE,\n        data,\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function paymentSchedule(state = initialState, action) {\n    switch (action.type) {\n        case SET_PAYMENT_SCHEDULE:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Field } from 'react-final-form';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\nimport { setPaymentSchedule } from 'src/reducers/paymentSchedule';\nimport calculatePayments from 'src/utils/calculatePayments';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onSubmit = (values) => {\n        const creditSum = parseFloat(values.creditSum);\n        const creditPercent = parseFloat(values.creditPercent);\n        const paymentPerMonth = parseFloat(values.paymentPerMonth);\n        const creditPeriod = parseFloat(values.creditPeriod);\n\n        const paymentSchedule = calculatePayments({\n            calculatingType: values.calculatingType,\n            creditSum,\n            creditPercent,\n            paymentPerMonth,\n            creditPeriod,\n        });\n        dispatch(setPaymentSchedule(paymentSchedule));\n    };\n\n    return (\n        <Box>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <Form\n                onSubmit={onSubmit}\n                initialValues={creditParams}\n                render={({ handleSubmit, values }) => (\n                    <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                        <MuiGrid container spacing={3}>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Field name=\"calculatingType\">\n                                    {({ input }) => (\n                                        <Select {...input} label=\"Способ расчета\">\n                                            <MuiMenuItem value={CALCULATING_TYPE.BY_PAYMENT}>\n                                                По сумме платежа\n                                            </MuiMenuItem>\n                                            <MuiMenuItem value={CALCULATING_TYPE.BY_PERIOD}>\n                                                По сроку кредита\n                                            </MuiMenuItem>\n                                        </Select>\n                                    )}\n                                </Field>\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Field name=\"creditSum\">\n                                    {({ input }) => <Input {...input} label=\"Сумма кредита\" />}\n                                </Field>\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Field name=\"creditPercent\">\n                                    {({ input }) => <Input {...input} label=\"Процентная ставка\" />}\n                                </Field>\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                {values.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                                    <Field name=\"paymentPerMonth\">\n                                        {({ input }) => <Input {...input} label=\"Ежемесячный платеж\" />}\n                                    </Field>\n                                )}\n                                {values.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                                    <Field name=\"creditPeriod\">\n                                        {({ input }) => <Input {...input} label=\"Срок кредита, мес.\" />}\n                                    </Field>\n                                )}\n                            </MuiGrid>\n                        </MuiGrid>\n                        <MuiGrid container justify=\"flex-end\" spacing={3}>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\n                                    Рассчитать\n                                </MuiButton>\n                            </MuiGrid>\n                        </MuiGrid>\n                    </form>\n                )}\n            />\n        </Box>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiDivider from '@material-ui/core/Divider';\n\nimport 'src/components/common/Summary/Summary.css';\nimport Box from 'src/components/common/Box';\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    return (\n        <Box>\n            <div\n                className={classnames('summary__icon', {\n                    [`summary__icon_${iconType}`]: iconType,\n                })}\n            >\n                {icon}\n            </div>\n            <div className=\"summary__content\">\n                <div className=\"summary__title\">\n                    <MuiTypography component=\"h3\" variant=\"body1\" color=\"textSecondary\">\n                        {title}\n                    </MuiTypography>\n                </div>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">\n                        {' '}\n                        {units}\n                    </MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className=\"summary__footer\">\n                <MuiTypography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n                    {footer}\n                </MuiTypography>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\n\nexport default function SummaryMonthCount() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Срок кредита\"\n            icon={<MuiEventAvailableIcon />}\n            value={summary.monthCount}\n            units=\"мес.\"\n            footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n            iconType=\"success\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function SummaryPayment() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Минимальный платеж\"\n            icon={<MuiAccountBalanceWalletIcon />}\n            value={priceFormat(summary.payment)}\n            units=\"руб.\"\n            footer={`${summary.onPercentage}% от этой суммы уйдет на погашение процентов в первый месяц`}\n            iconType=\"info\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nimport Summary from 'src/components/common/Summary';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function SummaryOverpayment() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Переплата\"\n            icon={<MuiAttachMoneyIcon />}\n            value={`${priceFormat(summary.overpayment)}`}\n            units=\"руб.\"\n            footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n            iconType=\"warning\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\n\nexport default function PaymentsChart() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    const chartData = paymentSchedule.dataByMonths.filter((item, index) => index !== 0);\n\n    return (\n        <Box>\n            <BoxTitle>Распределение ежемесячного платежа</BoxTitle>\n            <div style={{ width: '100%', height: 300 }}>\n                <ResponsiveContainer>\n                    <BarChart barCategoryGap=\"2%\" data={chartData}>\n                        <XAxis dataKey=\"dateFormatted\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar\n                            name=\"На погашение процентов\"\n                            unit=\" руб.\"\n                            dataKey=\"paymentByPercentsRounded\"\n                            stackId=\"a\"\n                            fill=\"#8884d8\"\n                        />\n                        <Bar\n                            name=\"На уменьшение суммы кредита\"\n                            unit=\" руб.\"\n                            dataKey=\"paymentByCreditRounded\"\n                            stackId=\"a\"\n                            fill=\"#82ca9d\"\n                        />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\n\nexport default function OverpaymentChart() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    const chartData = paymentSchedule.dataByMonths.filter((item, index) => index !== 0);\n\n    return (\n        <Box>\n            <BoxTitle>График переплаты</BoxTitle>\n            <div style={{ width: '100%', height: 300 }}>\n                <ResponsiveContainer>\n                    <AreaChart data={chartData}>\n                        <XAxis dataKey=\"dateFormatted\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Area name=\"Переплата\" unit=\" руб.\" dataKey=\"overpaymentRounded\" />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport 'src/components/PaymentScheduleTable/PaymentScheduleTable.css';\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function PaymentScheduleTable() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return (\n        <Box>\n            <BoxTitle>График платежей</BoxTitle>\n            <MuiTable size=\"small\" stickyHeader>\n                <MuiTableHead>\n                    <MuiTableRow>\n                        <MuiTableCell>№</MuiTableCell>\n                        <MuiTableCell>Дата</MuiTableCell>\n                        <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                        <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                        <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                        <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                        <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                    </MuiTableRow>\n                </MuiTableHead>\n                <MuiTableBody>\n                    {paymentSchedule.dataByMonths.map((row) => (\n                        <MuiTableRow key={row.number}>\n                            <MuiTableCell>{row.number}.</MuiTableCell>\n                            <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                        </MuiTableRow>\n                    ))}\n                </MuiTableBody>\n            </MuiTable>\n        </Box>\n    );\n}\n","import React from 'react';\nimport MuiDashboardIcon from '@material-ui/icons/Dashboard';\nimport MuiBookmarksIcon from '@material-ui/icons/Bookmarks';\n\nimport MainPage from 'src/pages/Main';\nimport SavedCreditsPage from 'src/pages/SavedCredits';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n        menuIcon: <MuiDashboardIcon />,\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n        menuIcon: <MuiBookmarksIcon />,\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditForm from 'src/components/CreditForm';\nimport SummaryMonthCount from 'src/components/SummaryMonthCount';\nimport SummaryPayment from 'src/components/SummaryPayment';\nimport SummaryOverpayment from 'src/components/SummaryOverpayment';\nimport PaymentsChart from 'src/components/PaymentsChart';\nimport OverpaymentChart from 'src/components/OverpaymentChart';\nimport PaymentScheduleTable from 'src/components/PaymentScheduleTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={4} lg={4}>\n                    <SummaryMonthCount />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={4} lg={4}>\n                    <SummaryPayment />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={4} lg={4}>\n                    <SummaryOverpayment />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <OverpaymentChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentsChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentScheduleTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\n\nimport routes from 'src/routes';\n\nexport default function Header() {\n    return (\n        <MuiBox mb={4}>\n            <MuiAppBar position=\"static\">\n                <MuiToolbar>\n                    <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\">\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route key={index} path={route.path} exact>\n                                    {route.title}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </MuiTypography>\n                </MuiToolbar>\n            </MuiAppBar>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MuiDivider from '@material-ui/core/Divider';\nimport MuiList from '@material-ui/core/List';\nimport MuiDrawer from '@material-ui/core/Drawer/Drawer';\nimport MuiListItem from '@material-ui/core/ListItem';\nimport MuiListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport MuiListItemText from '@material-ui/core/ListItemText/ListItemText';\n\nimport 'src/components/Menu/Menu.css';\nimport routes from 'src/routes';\n\nexport default function Menu() {\n    return (\n        <MuiDrawer variant=\"permanent\" className=\"menu\" open={true}>\n            <div className=\"menu__toolbar\" />\n            <MuiDivider />\n            <MuiList>\n                {routes.map((route, index) => (\n                    <MuiListItem key={index} button component={Link} to={route.path}>\n                        <MuiListItemIcon>{route.menuIcon}</MuiListItemIcon>\n                        <MuiListItemText primary={route.title} />\n                    </MuiListItem>\n                ))}\n            </MuiList>\n        </MuiDrawer>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4} mb={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'src/App.css';\n\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport routes from 'src/routes';\nimport Header from 'src/components/Header';\nimport Menu from 'src/components/Menu';\nimport Footer from 'src/components/Footer';\n\nexport default function Dashboard() {\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <MuiCssBaseline />\n                <Menu />\n                <div className=\"app-content\">\n                    <Header />\n                    <main>\n                        <MuiContainer maxWidth=\"lg\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route key={index} path={route.path} exact>\n                                        {route.component}\n                                    </Route>\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </MuiContainer>\n                    </main>\n                </div>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'src/index.css';\nimport App from 'src/App';\n\nimport configureStore from 'src/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import { createStore, combineReducers } from 'redux';\nimport creditParams from 'src/reducers/creditParams';\nimport paymentSchedule from 'src/reducers/paymentSchedule';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            creditParams,\n            paymentSchedule,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}