{"version":3,"sources":["components/Header/index.js","components/Menu/index.js","components/Footer/index.js","components/common/Box/index.js","components/common/Box/Title.js","reducers/creditParams.js","utils/date.js","utils/calculatePayments.js","reducers/paymentSchedule.js","components/CreditForm/index.js","components/common/Summary/index.js","components/SummaryMonthCount/index.js","utils/common.js","components/SummaryOverpayment/index.js","components/PaymentSchedule/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["useStyles","makeStyles","theme","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","display","title","flexGrow","Header","handleDrawerOpen","isOpenMenu","classes","position","className","clsx","edge","color","onClick","component","variant","noWrap","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","toolbarIcon","alignItems","justifyContent","padding","mixins","Menu","handleDrawerClose","paper","open","button","primary","Footer","mt","align","Date","getFullYear","root","marginBottom","Box","children","Paper","Title","props","initialCreditParams","creditSum","creditPercent","paymentPerMonth","creditParams","state","action","type","params","getNextMonth","date","newDate","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","startDate","calculateOnePayment","previousRow","payment","percentage","currentRow","number","daysCountInPreviousYear","daysCountInCurrentYear","paymentByPercents","daysCountInPreviousMonth","daysCountInCurrentMonth","creditLeft","paymentByCredit","overpayment","calculatePayments","paymentSchedule","monthCount","length","nextPayment","push","dataByMonths","summary","initialState","data","CreditForm","useSelector","dispatch","useDispatch","formRef","useRef","noValidate","autoComplete","ref","Grid","container","item","xs","md","lg","TextField","label","name","defaultValue","size","fullWidth","Button","elements","current","parseFloat","value","icon","height","marginTop","backgroundColor","palette","info","main","backgroundImage","dark","contrastText","borderRadius","shape","boxShadow","shadows","content","textAlign","Summary","SummaryMonthCount","fontSize","priceFormat","Math","round","toLocaleString","SummaryOverpayment","PaymentSchedule","map","row","key","splittedDate","toISOString","substr","split","formatDate","appBarSpacer","overflow","paddingTop","paddingBottom","Dashboard","React","useState","openMenu","setOpenMenu","maxWidth","Boolean","window","location","hostname","match","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c2d1ad52.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport MuiIconButton from \"@material-ui/core/IconButton\";\nimport MuiMenuIcon from \"@material-ui/icons/Menu\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport MuiAppBar from \"@material-ui/core/AppBar/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        paddingRight: 24,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header({ handleDrawerOpen, isOpenMenu }) {\n    const classes = useStyles();\n    return (\n        <MuiAppBar position=\"absolute\" className={clsx(classes.appBar, isOpenMenu && classes.appBarShift)}>\n            <MuiToolbar className={classes.toolbar}>\n                <MuiIconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    onClick={handleDrawerOpen}\n                    className={clsx(classes.menuButton, isOpenMenu && classes.menuButtonHidden)}\n                >\n                    <MuiMenuIcon />\n                </MuiIconButton>\n                <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\n                    Кредитный калькулятор\n                </MuiTypography>\n            </MuiToolbar>\n        </MuiAppBar>\n    )\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport MuiIconButton from \"@material-ui/core/IconButton\";\nimport MuiChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MuiDivider from \"@material-ui/core/Divider\";\nimport MuiList from \"@material-ui/core/List\";\nimport MuiDrawer from \"@material-ui/core/Drawer/Drawer\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport MuiListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\nimport MuiDashboardIcon from \"@material-ui/icons/Dashboard\";\nimport MuiBookmarksIcon from \"@material-ui/icons/Bookmarks\";\nimport MuiListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n}));\n\nexport default function Menu({ handleDrawerClose, isOpenMenu }) {\n    const classes = useStyles();\n    return (\n        <MuiDrawer\n            variant=\"permanent\"\n            classes={{\n                paper: clsx(classes.drawerPaper, !isOpenMenu && classes.drawerPaperClose),\n            }}\n            open={isOpenMenu}\n        >\n            <div className={classes.toolbarIcon}>\n                <MuiIconButton onClick={handleDrawerClose}>\n                    <MuiChevronLeftIcon />\n                </MuiIconButton>\n            </div>\n            <MuiDivider />\n            <MuiList>\n                <MuiListItem button>\n                    <MuiListItemIcon>\n                        <MuiDashboardIcon />\n                    </MuiListItemIcon>\n                    <MuiListItemText primary=\"Кредитный калькулятор\" />\n                </MuiListItem>\n                <MuiListItem button>\n                    <MuiListItemIcon>\n                        <MuiBookmarksIcon />\n                    </MuiListItemIcon>\n                    <MuiListItemText primary=\"Сохраненные кредиты\" />\n                </MuiListItem>\n            </MuiList>\n        </MuiDrawer>\n    )\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from \"@material-ui/core/Box\";\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator\n                {' '}\n                {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(4),\n    },\n}));\n\nexport default function Box({ children }) {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.root}>\n            {children}\n        </Paper>\n    )\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(3)\n    }\n}));\n\nexport default function Title(props) {\n    const classes = useStyles();\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" className={classes.root}>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","const SET_CREDIT_PARAMS = 'SET_CREDIT_PARAMS';\n\nexport function setCreditParams(params) {\n    return {\n        type: SET_CREDIT_PARAMS,\n        params\n    }\n}\n\nexport const initialCreditParams = {\n    creditSum: 1500000,\n    creditPercent: 8.8,\n    paymentPerMonth: 15036,\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAMS:\n            return {...action.params};\n        default:\n            return state;\n    }\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatDate = (date) => {\n    const strDate = date.toISOString().substr(0, 10);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n}\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","import { getNextMonth, getDaysCountInYear, getDaysCountBetweenDates } from './date';\n\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = new Date();\n\nfunction calculateOnePayment(previousRow, payment, percentage) {\n    const currentRow = {\n        number: previousRow.number + 1,\n        date: getNextMonth(previousRow.date),\n        payment,\n    };\n\n    const daysCountInPreviousYear = getDaysCountInYear(previousRow.date.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(currentRow.date.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда платежный месяц выпадает на границу високосного и невисокоснова годов\n    // В таком случае стоимость одного дня для платежного месяца рассчитывается по разному\n    if (\n        previousRow.date.getMonth() === 11 &&\n        daysCountInPreviousYear !== daysCountInCurrentYear\n    ) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            previousRow.date, new Date(`${previousRow.date.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth = getDaysCountBetweenDates(\n            new Date(`${currentRow.date.getFullYear()}-01-01`), currentRow.date,\n        ) + 1;\n\n        const oneDayCreditCostForPreviousMonth = previousRow.creditLeft * percentage / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = previousRow.creditLeft * percentage / daysCountInCurrentYear;\n\n        paymentByPercents = oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth + oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth\n    } else {\n        // обычный случай\n        const oneDayCreditCost = previousRow.creditLeft * percentage / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(previousRow.date, currentRow.date);\n    }\n\n    // последний платежный месяц\n    if (previousRow.creditLeft <= payment) {\n        currentRow.payment = previousRow.creditLeft + paymentByPercents;\n    }\n\n    const paymentByCredit = currentRow.payment - paymentByPercents;\n\n    currentRow['paymentByPercents'] = paymentByPercents;\n    currentRow['paymentByCredit'] = paymentByCredit;\n    currentRow['overpayment'] = previousRow.overpayment + paymentByPercents;\n    currentRow['creditLeft'] = previousRow.creditLeft - paymentByCredit;\n\n    return currentRow;\n}\n\nexport default function calculatePayments({creditSum, creditPercent, paymentPerMonth}) {\n    const paymentSchedule = [];\n    const percentage = creditPercent / 100;\n\n    paymentSchedule[0] = {\n        number: 0,\n        date: startDate,\n        payment: 0,\n        paymentByPercents: 0,\n        paymentByCredit: 0,\n        overpayment: 0,\n        creditLeft: creditSum,\n    };\n\n    let creditLeft = creditSum;\n    let monthCount = 0;\n\n    while (paymentSchedule.length < MAX_MONTHS_COUNT && creditLeft > 0) {\n        const nextPayment = calculateOnePayment(paymentSchedule[monthCount], paymentPerMonth, percentage);\n        paymentSchedule.push(nextPayment);\n        creditLeft = nextPayment.creditLeft;\n        monthCount++;\n    }\n\n    return {\n        dataByMonths: paymentSchedule,\n        summary: {\n            overpayment: paymentSchedule[paymentSchedule.length - 1].overpayment,\n            monthCount: paymentSchedule.length,\n        }\n    };\n}\n","import calculatePayments from '../utils/calculatePayments';\nimport { initialCreditParams } from './creditParams';\n\nconst SET_PAYMENT_SCHEDULE = 'SET_PAYMENT_SCHEDULE';\n\nexport function setPaymentSchedule(data) {\n    return {\n        type: SET_PAYMENT_SCHEDULE,\n        data\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function paymentSchedule(state = initialState, action) {\n    switch (action.type) {\n        case SET_PAYMENT_SCHEDULE:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React, { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Button, Grid } from '@material-ui/core';\n\nimport Box from '../common/Box';\nimport BoxTitle from '../common/Box/Title';\nimport { setCreditParams } from '../../reducers/creditParams';\nimport { setPaymentSchedule } from '../../reducers/paymentSchedule';\nimport calculatePayments from '../../utils/calculatePayments';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const formRef = useRef();\n\n    const onButtonClick = () => {\n        const elements = formRef.current.elements;\n        const creditSum = parseFloat(elements.creditSum.value);\n        const creditPercent = parseFloat(elements.creditPercent.value);\n        const paymentPerMonth = parseFloat(elements.paymentPerMonth.value);\n        dispatch(setCreditParams({\n            creditSum,\n            creditPercent,\n            paymentPerMonth,\n        }));\n\n        const paymentSchedule = calculatePayments({ creditSum, creditPercent, paymentPerMonth });\n        dispatch(setPaymentSchedule(paymentSchedule))\n    };\n\n    return (\n        <Box>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <form noValidate autoComplete=\"off\" ref={formRef}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <TextField\n                            label=\"Сумма кредита\"\n                            name=\"creditSum\"\n                            defaultValue={creditParams.creditSum}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <TextField\n                            label=\"Процентная ставка\"\n                            name=\"creditPercent\"\n                            defaultValue={creditParams.creditPercent}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <TextField\n                            label=\"Ежемесячный платеж\"\n                            name=\"paymentPerMonth\"\n                            defaultValue={creditParams.paymentPerMonth}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={onButtonClick}>\n                            Рассчитать\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Box>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiTypography from \"@material-ui/core/Typography\";\n\nimport Box from '../Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    icon: {\n        width: 70,\n        height: 70,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: -theme.spacing(4),\n        marginBottom: theme.spacing(4),\n        backgroundColor: theme.palette.info.main,\n        backgroundImage: `linear-gradient(to right, ${theme.palette.info.main}, ${theme.palette.info.dark})`,\n        color: theme.palette.primary.contrastText,\n        padding: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows['2']\n    },\n    content: {\n        flexGrow: 1,\n        marginLeft: theme.spacing(2),\n        textAlign: 'right',\n    }\n}));\n\nexport default function Summary({ icon, title, value, children }) {\n    const classes = useStyles();\n    return (\n        <Box>\n            <div className={classes.root}>\n                <div className={classes.icon}>{icon}</div>\n                <div className={classes.content}>\n                    <MuiTypography component=\"h3\" className={classes.title}>{title}</MuiTypography>\n                    <MuiTypography component=\"p\" variant=\"h3\">{value}</MuiTypography>\n                </div>\n            </div>\n        </Box>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\n\nimport Summary from '../common/Summary';\n\nexport default function SummaryMonthCount() {\n    const { paymentSchedule: { summary } } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Срок кредита\"\n            icon={<MuiEventAvailableIcon fontSize=\"large\" />}\n            value={`${summary.monthCount} месяца`}\n        />\n    );\n}\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU');\n}\n\nexport function dateFormat(date) {\n    return date.toLocaleDateString('ru-RU');\n}\n\nexport function calcPercent(sum, percent, date) {\n    // пока это не точный рассчет процентов. Надо делить на 365 и умножать на количество дней в месяце\n    return sum * (percent / 100) / 12;\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function roundMoney(value) {\n    return Math.round(value * 100) / 100;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nimport Summary from '../common/Summary';\nimport { priceFormat } from '../../utils/common'\n\nexport default function SummaryOverpayment() {\n    const { paymentSchedule: { summary } } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Переплата\"\n            icon={<MuiAttachMoneyIcon fontSize=\"large\" />}\n            value={`${priceFormat(summary.overpayment)} руб.`}\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport Box from '../common/Box';\nimport BoxTitle from '../common/Box/Title';\nimport { priceFormat } from '../../utils/common';\nimport { formatDate } from '../../utils/date';\n\nexport default function PaymentSchedule() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return (\n        <Box>\n            <BoxTitle>График платежей</BoxTitle>\n            <MuiTable size=\"small\">\n                <MuiTableHead>\n                    <MuiTableRow>\n                        <MuiTableCell>№</MuiTableCell>\n                        <MuiTableCell>Дата</MuiTableCell>\n                        <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                        <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                        <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                        <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                        <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                    </MuiTableRow>\n                </MuiTableHead>\n                <MuiTableBody>\n                    {paymentSchedule.dataByMonths.map((row) => (\n                        <MuiTableRow key={row.number}>\n                            <MuiTableCell>{row.number}.</MuiTableCell>\n                            <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                        </MuiTableRow>\n                    ))}\n                </MuiTableBody>\n            </MuiTable>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport Footer from './components/Footer';\nimport CreditForm from './components/CreditForm';\nimport SummaryMonthCount from './components/SummaryMonthCount';\nimport SummaryOverpayment from './components/SummaryOverpayment';\nimport PaymentSchedule from './components/PaymentSchedule';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [openMenu, setOpenMenu] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpenMenu(true);\n  };\n  const handleDrawerClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n      <div className={classes.root}>\n        <MuiCssBaseline />\n        <Header isOpenMenu={openMenu} handleDrawerOpen={handleDrawerOpen} />\n        <Menu isOpenMenu={openMenu} handleDrawerClose={handleDrawerClose} />\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <MuiContainer maxWidth=\"lg\" className={classes.container}>\n            <MuiGrid container spacing={4}>\n              <MuiGrid item xs={12} md={12} lg={12}>\n                <CreditForm />\n              </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n              <MuiGrid item xs={12} md={6} lg={6}>\n                <SummaryMonthCount />\n              </MuiGrid>\n              <MuiGrid item xs={12} md={6} lg={6}>\n                <SummaryOverpayment />\n              </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n              <MuiGrid item xs={12}>\n                <PaymentSchedule />\n              </MuiGrid>\n            </MuiGrid>\n            <Footer />\n          </MuiContainer>\n        </main>\n      </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers } from 'redux';\nimport creditParams from './reducers/creditParams';\nimport paymentSchedule from './reducers/paymentSchedule';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            creditParams,\n            paymentSchedule,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}