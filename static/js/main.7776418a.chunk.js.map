{"version":3,"sources":["components/common/Box/index.js","components/common/Box/Title.js","reducers/creditParams.js","utils/date.js","utils/calculatePayments.js","reducers/paymentSchedule.js","components/CreditForm/index.js","components/common/Summary/index.js","components/SummaryMonthCount/index.js","utils/common.js","components/SummaryOverpayment/index.js","components/PaymentSchedule/index.js","routes.js","pages/Main/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","marginBottom","display","flexDirection","position","Box","children","classes","Paper","className","Title","props","component","variant","color","initialCreditParams","creditSum","creditPercent","paymentPerMonth","creditParams","state","action","type","params","formatDate","date","splittedDate","toISOString","substr","split","getNextMonth","newDate","Date","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","startDate","calculateOnePayment","previousRow","payment","percentage","currentRow","number","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","paymentByPercents","daysCountInPreviousMonth","daysCountInCurrentMonth","creditLeft","paymentByCredit","overpayment","calculatePayments","paymentSchedule","monthCount","length","nextPayment","push","lastRow","dataByMonths","summary","overpaymentPercent","Math","round","lastPaymentDate","initialState","data","CreditForm","useSelector","dispatch","useDispatch","formRef","useRef","noValidate","autoComplete","ref","Grid","container","item","xs","md","lg","TextField","label","name","defaultValue","size","fullWidth","Button","onClick","elements","current","parseFloat","value","icon","width","height","top","alignItems","justifyContent","backgroundColor","palette","info","main","backgroundImage","dark","primary","contrastText","borderRadius","shape","boxShadow","shadows","iconColorSuccess","success","iconColorWarning","warning","content","flexGrow","marginLeft","textAlign","footer","marginTop","Summary","iconType","title","units","clsx","SummaryMonthCount","fontSize","priceFormat","toLocaleString","SummaryOverpayment","StyledTableRow","withStyles","hover","MuiTableRow","StyledTableCell","head","common","white","body","MuiTableCell","PaymentSchedule","stickyHeader","align","map","row","key","routes","path","Header","route","index","exact","drawerPaper","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbarIcon","mixins","toolbar","Menu","useState","open","setOpen","paper","button","Link","to","Footer","mt","paddingTop","paddingBottom","Dashboard","maxWidth","Boolean","window","location","hostname","match","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7776418a.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'relative',\n    },\n}));\n\nexport default function Box({ children }) {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.root}>\n            {children}\n        </Paper>\n    )\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(3)\n    }\n}));\n\nexport default function Title(props) {\n    const classes = useStyles();\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" className={classes.root}>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","const SET_CREDIT_PARAMS = 'SET_CREDIT_PARAMS';\n\nexport function setCreditParams(params) {\n    return {\n        type: SET_CREDIT_PARAMS,\n        params\n    }\n}\n\nexport const initialCreditParams = {\n    creditSum: 1500000,\n    creditPercent: 8.8,\n    paymentPerMonth: 15036,\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAMS:\n            return {...action.params};\n        default:\n            return state;\n    }\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatDate = (date) => {\n    const strDate = date.toISOString().substr(0, 10);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n}\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","import { getNextMonth, getDaysCountInYear, getDaysCountBetweenDates } from './date';\n\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = new Date();\n\nfunction calculateOnePayment(previousRow, payment, percentage) {\n    const currentRow = {\n        number: previousRow.number + 1,\n        date: getNextMonth(previousRow.date),\n        payment,\n    };\n\n    const daysCountInPreviousYear = getDaysCountInYear(previousRow.date.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(currentRow.date.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда платежный месяц выпадает на границу високосного и невисокоснова годов\n    // В таком случае стоимость одного дня для платежного месяца рассчитывается по разному\n    if (\n        previousRow.date.getMonth() === 11 &&\n        daysCountInPreviousYear !== daysCountInCurrentYear\n    ) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            previousRow.date, new Date(`${previousRow.date.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth = getDaysCountBetweenDates(\n            new Date(`${currentRow.date.getFullYear()}-01-01`), currentRow.date,\n        ) + 1;\n\n        const oneDayCreditCostForPreviousMonth = previousRow.creditLeft * percentage / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = previousRow.creditLeft * percentage / daysCountInCurrentYear;\n\n        paymentByPercents = oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth + oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth\n    } else {\n        // обычный случай\n        const oneDayCreditCost = previousRow.creditLeft * percentage / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(previousRow.date, currentRow.date);\n    }\n\n    // последний платежный месяц\n    if (previousRow.creditLeft <= payment) {\n        currentRow.payment = previousRow.creditLeft + paymentByPercents;\n    }\n\n    const paymentByCredit = currentRow.payment - paymentByPercents;\n\n    currentRow['paymentByPercents'] = paymentByPercents;\n    currentRow['paymentByCredit'] = paymentByCredit;\n    currentRow['overpayment'] = previousRow.overpayment + paymentByPercents;\n    currentRow['creditLeft'] = previousRow.creditLeft - paymentByCredit;\n\n    return currentRow;\n}\n\nexport default function calculatePayments({creditSum, creditPercent, paymentPerMonth}) {\n    const paymentSchedule = [];\n    const percentage = creditPercent / 100;\n\n    paymentSchedule[0] = {\n        number: 0,\n        date: startDate,\n        payment: 0,\n        paymentByPercents: 0,\n        paymentByCredit: 0,\n        overpayment: 0,\n        creditLeft: creditSum,\n    };\n\n    let creditLeft = creditSum;\n    let monthCount = 0;\n\n    while (paymentSchedule.length < MAX_MONTHS_COUNT && creditLeft > 0) {\n        const nextPayment = calculateOnePayment(paymentSchedule[monthCount], paymentPerMonth, percentage);\n        paymentSchedule.push(nextPayment);\n        creditLeft = nextPayment.creditLeft;\n        monthCount++;\n    }\n\n    const lastRow = paymentSchedule[paymentSchedule.length - 1];\n\n    return {\n        dataByMonths: paymentSchedule,\n        summary: {\n            overpayment: lastRow.overpayment,\n            overpaymentPercent: Math.round(lastRow.overpayment / creditSum * 100),\n            monthCount: paymentSchedule.length,\n            lastPaymentDate: lastRow.date,\n        }\n    };\n}\n","import calculatePayments from '../utils/calculatePayments';\nimport { initialCreditParams } from './creditParams';\n\nconst SET_PAYMENT_SCHEDULE = 'SET_PAYMENT_SCHEDULE';\n\nexport function setPaymentSchedule(data) {\n    return {\n        type: SET_PAYMENT_SCHEDULE,\n        data\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function paymentSchedule(state = initialState, action) {\n    switch (action.type) {\n        case SET_PAYMENT_SCHEDULE:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React, { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Button, Grid } from '@material-ui/core';\n\nimport Box from '../common/Box';\nimport BoxTitle from '../common/Box/Title';\nimport { setCreditParams } from '../../reducers/creditParams';\nimport { setPaymentSchedule } from '../../reducers/paymentSchedule';\nimport calculatePayments from '../../utils/calculatePayments';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const formRef = useRef();\n\n    const onButtonClick = () => {\n        const elements = formRef.current.elements;\n        const creditSum = parseFloat(elements.creditSum.value);\n        const creditPercent = parseFloat(elements.creditPercent.value);\n        const paymentPerMonth = parseFloat(elements.paymentPerMonth.value);\n        dispatch(setCreditParams({\n            creditSum,\n            creditPercent,\n            paymentPerMonth,\n        }));\n\n        const paymentSchedule = calculatePayments({ creditSum, creditPercent, paymentPerMonth });\n        dispatch(setPaymentSchedule(paymentSchedule))\n    };\n\n    return (\n        <Box>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <form noValidate autoComplete=\"off\" ref={formRef}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <TextField\n                            label=\"Сумма кредита\"\n                            name=\"creditSum\"\n                            defaultValue={creditParams.creditSum}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <TextField\n                            label=\"Процентная ставка\"\n                            name=\"creditPercent\"\n                            defaultValue={creditParams.creditPercent}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <TextField\n                            label=\"Ежемесячный платеж\"\n                            name=\"paymentPerMonth\"\n                            defaultValue={creditParams.paymentPerMonth}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={onButtonClick}>\n                            Рассчитать\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Box>\n    )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport MuiDivider from \"@material-ui/core/Divider\";\n\nimport Box from '../Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        width: 80,\n        height: 80,\n        position: 'absolute',\n        top: -theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: theme.palette.info.main,\n        backgroundImage: `linear-gradient(to right, ${theme.palette.info.main}, ${theme.palette.info.dark})`,\n        color: theme.palette.primary.contrastText,\n        padding: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows['2']\n    },\n    iconColorSuccess: {\n        backgroundColor: theme.palette.success.main,\n        backgroundImage: `linear-gradient(to right, ${theme.palette.success.main}, ${theme.palette.success.dark})`,\n    },\n    iconColorWarning: {\n        backgroundColor: theme.palette.warning.main,\n        backgroundImage: `linear-gradient(to right, ${theme.palette.warning.main}, ${theme.palette.warning.dark})`,\n    },\n    content: {\n        flexGrow: 1,\n        marginLeft: 100,\n        textAlign: 'right',\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    const classes = useStyles();\n    return (\n        <Box>\n            <div\n                className={clsx(classes.icon,\n                    iconType === 'success' && classes.iconColorSuccess,\n                    iconType === 'warning' && classes.iconColorWarning\n                )}\n            >\n                {icon}\n            </div>\n            <div className={classes.content}>\n                <MuiTypography component=\"h3\" variant=\"h6\" color=\"textSecondary\">{title}</MuiTypography>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">{' '}{units}</MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className={classes.footer}>\n                <MuiTypography component=\"p\" color=\"textSecondary\">{footer}</MuiTypography>\n            </div>\n        </Box>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\n\nimport Summary from '../common/Summary';\nimport { formatDate } from '../../utils/date';\n\nexport default function SummaryMonthCount() {\n    const { paymentSchedule: { summary } } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Срок кредита\"\n            icon={<MuiEventAvailableIcon fontSize=\"large\" />}\n            value={summary.monthCount}\n            units=\"мес.\"\n            footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n            iconType=\"success\"\n        />\n    );\n}\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU');\n}\n\nexport function dateFormat(date) {\n    return date.toLocaleDateString('ru-RU');\n}\n\nexport function calcPercent(sum, percent, date) {\n    // пока это не точный рассчет процентов. Надо делить на 365 и умножать на количество дней в месяце\n    return sum * (percent / 100) / 12;\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function roundMoney(value) {\n    return Math.round(value * 100) / 100;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nimport Summary from '../common/Summary';\nimport { priceFormat } from '../../utils/common'\n\nexport default function SummaryOverpayment() {\n    const { paymentSchedule: { summary } } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Переплата\"\n            icon={<MuiAttachMoneyIcon fontSize=\"large\" />}\n            value={`${priceFormat(summary.overpayment)}`}\n            units=\"руб.\"\n            footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n            iconType=\"warning\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport Box from '../common/Box';\nimport BoxTitle from '../common/Box/Title';\nimport { priceFormat } from '../../utils/common';\nimport { formatDate } from '../../utils/date';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(MuiTableRow);\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(MuiTableCell);\n\nexport default function PaymentSchedule() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return (\n        <Box>\n            <BoxTitle>График платежей</BoxTitle>\n            <MuiTable size=\"small\" stickyHeader>\n                <MuiTableHead>\n                    <MuiTableRow>\n                        <StyledTableCell>№</StyledTableCell>\n                        <StyledTableCell>Дата</StyledTableCell>\n                        <StyledTableCell align=\"right\">Платеж</StyledTableCell>\n                        <StyledTableCell align=\"right\">По процентам</StyledTableCell>\n                        <StyledTableCell align=\"right\">По кредиту</StyledTableCell>\n                        <StyledTableCell align=\"right\">Переплата</StyledTableCell>\n                        <StyledTableCell align=\"right\">Остаток долга</StyledTableCell>\n                    </MuiTableRow>\n                </MuiTableHead>\n                <MuiTableBody>\n                    {paymentSchedule.dataByMonths.map((row) => (\n                        <StyledTableRow key={row.number}>\n                            <MuiTableCell>{row.number}.</MuiTableCell>\n                            <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                            <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                        </StyledTableRow>\n                    ))}\n                </MuiTableBody>\n            </MuiTable>\n        </Box>\n    );\n}\n","import MainPage from './pages/Main';\nimport SavedCreditsPage from './pages/SavedCredits';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditForm from '../../components/CreditForm';\nimport SummaryMonthCount from '../../components/SummaryMonthCount';\nimport SummaryOverpayment from '../../components/SummaryOverpayment';\nimport PaymentSchedule from '../../components/PaymentSchedule';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={6} lg={6}>\n                    <SummaryMonthCount />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={6} lg={6}>\n                    <SummaryOverpayment />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentSchedule />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\nimport routes from '../../routes';\n\nexport default function Header() {\n    return (\n        <MuiAppBar position='static'>\n            <MuiToolbar>\n                <MuiTypography component='h1' variant='h5' color='inherit'>\n                    <Switch>\n                        {routes.map((route, index) => (\n                            <Route key={index} path={route.path} exact>\n                                {route.title}\n                            </Route>\n                        ))}\n                    </Switch>\n                </MuiTypography>\n            </MuiToolbar>\n        </MuiAppBar>\n    )\n}\n","import React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport MuiIconButton from \"@material-ui/core/IconButton\";\nimport MuiChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MuiMenuIcon from '@material-ui/icons/Menu';\nimport MuiDivider from \"@material-ui/core/Divider\";\nimport MuiList from \"@material-ui/core/List\";\nimport MuiDrawer from \"@material-ui/core/Drawer/Drawer\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport MuiListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\nimport MuiDashboardIcon from \"@material-ui/icons/Dashboard\";\nimport MuiBookmarksIcon from \"@material-ui/icons/Bookmarks\";\nimport MuiListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n}));\n\nexport default function Menu() {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n    const handleMenuOpen = () => {\n        setOpen(true);\n    };\n    const handleMenuClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <MuiDrawer\n            variant=\"permanent\"\n            classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }}\n            open={open}\n        >\n            <div className={classes.toolbarIcon}>\n                {open ? (\n                    <MuiIconButton onClick={handleMenuClose}>\n                        <MuiChevronLeftIcon />\n                    </MuiIconButton>\n                ) : (\n                    <MuiIconButton onClick={handleMenuOpen}>\n                        <MuiMenuIcon />\n                    </MuiIconButton>\n                )}\n            </div>\n            <MuiDivider />\n            <MuiList>\n                <MuiListItem button component={Link} to=\"/\">\n                    <MuiListItemIcon>\n                        <MuiDashboardIcon />\n                    </MuiListItemIcon>\n                    <MuiListItemText primary=\"Кредитный калькулятор\" />\n                </MuiListItem>\n                <MuiListItem button component={Link} to=\"/saved-credits\">\n                    <MuiListItemIcon>\n                        <MuiBookmarksIcon />\n                    </MuiListItemIcon>\n                    <MuiListItemText primary=\"Сохраненные кредиты\" />\n                </MuiListItem>\n            </MuiList>\n        </MuiDrawer>\n    )\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from \"@material-ui/core/Box\";\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator\n                {' '}\n                {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport Footer from './components/Footer';\n\n\nimport routes from './routes';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n      <Router>\n        <div className={classes.root}>\n          <MuiCssBaseline />\n          <Menu />\n          <div className={classes.content}>\n            <Header />\n            <main className={classes.content}>\n              <MuiContainer maxWidth=\"lg\" className={classes.container}>\n                <Switch>\n                  {routes.map((route, index) => (\n                      <Route key={index} path={route.path} exact>\n                        {route.component}\n                      </Route>\n                  ))}\n                </Switch>\n                <Footer />\n              </MuiContainer>\n            </main>\n          </div>\n        </div>\n      </Router>\n\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers } from 'redux';\nimport creditParams from './reducers/creditParams';\nimport paymentSchedule from './reducers/paymentSchedule';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            creditParams,\n            paymentSchedule,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}