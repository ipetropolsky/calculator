{"version":3,"sources":["components/common/Box/Title.js","components/common/Box/index.js","components/common/Input/LargeInput.js","components/common/Input/NumberInput.js","utils/common.js","utils/date.js","utils/calculatePayments.js","reducers/credits.js","reducers/paymentSchedule.js","components/CreditForm/index.js","components/MultiCreditForm/index.js","components/common/Summary/index.js","components/SummaryMonthCount/index.js","components/SummaryOverpayment/index.js","components/PaymentsChart/index.js","components/OverpaymentChart/index.js","components/PaymentScheduleTable/index.js","routes.js","pages/Main/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","index.js","store.js"],"names":["Title","props","component","variant","color","paragraph","children","Box","Paper","className","LargeInput","withStyles","input","fontSize","Input","NumberInput","label","onChange","step","units","shiftStep","value","minValue","maxValue","valueProcessor","parsedValue","parseFloat","fullWidth","target","floatValue","isNaN","startAdornment","position","style","marginLeft","aria-label","onClick","shiftKey","Math","max","disabled","endAdornment","marginRight","min","defaultProps","Infinity","propTypes","PropTypes","string","number","func","priceFormat","round","toLocaleString","replace","roundValue","removeItem","array","item","filter","current","addItemIfNotExists","includes","concat","removeProperty","object","property","result","formatDate","date","splittedDate","toISOString","substr","split","getNextMonth","newDate","Date","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","startDate","addFormattedFields","row","dateFormatted","paymentRounded","payment","paymentByPercentsRounded","paymentByPercents","paymentByCreditRounded","paymentByCredit","overpaymentRounded","overpayment","creditLeftRounded","creditLeft","calculateOnePayment","previousRow","percentage","currentRow","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","daysCountInPreviousMonth","daysCountInCurrentMonth","calculatePayments","creditSum","creditPercent","paymentPerMonth","paymentSchedule","monthCount","length","nextPayment","push","lastRow","dataByMonths","summary","overpaymentPercent","lastPaymentDate","initialCreditParams","months","locked","initialCredits","names","active","creditByName","default","name","scheduleByName","credits","state","type","payload","creditParams","field","initialState","action","data","CreditForm","useSelector","creditSchedule","isActive","dispatch","useDispatch","hasOwnProperty","elevation","onSubmit","event","preventDefault","noValidate","autoComplete","container","spacing","direction","xs","mt","size","isRequired","creditNameCounter","MultiCreditForm","mb","map","key","md","lg","Summary","icon","iconType","title","footer","classnames","SummaryMonthCount","SummaryOverpayment","PaymentsChart","width","height","barCategoryGap","dataKey","unit","stackId","fill","OverpaymentChart","PaymentScheduleTable","useMemo","stickyHeader","align","routes","path","menuIcon","Header","route","index","exact","Menu","open","button","Link","to","primary","Footer","Dashboard","maxWidth","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ce25e60.chunk.js","sourcesContent":["import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" paragraph>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport 'src/components/common/Box/Box.css';\n\nexport default function Box({ children, ...props }) {\n    return (\n        <Paper className=\"box\" {...props}>\n            {children}\n        </Paper>\n    );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst LargeInput = withStyles(() => ({ input: { fontSize: 24 } }))(Input);\n\nexport default LargeInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MuiInputLabel from '@material-ui/core/InputLabel';\nimport MuiFormControl from '@material-ui/core/FormControl';\n\nimport LargeInput from 'src/components/common/Input/LargeInput';\nimport MuiInputAdornment from '@material-ui/core/InputAdornment';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst NumberInput = ({\n    label,\n    onChange,\n    units,\n    step,\n    shiftStep,\n    value,\n    minValue,\n    maxValue,\n    valueProcessor,\n    ...props\n}) => {\n    const parsedValue = valueProcessor(parseFloat(value));\n    const onInputChange = ({ target: { value } }) => {\n        const floatValue = parseFloat(value);\n        if (!isNaN(floatValue)) {\n            onChange(floatValue);\n        }\n    };\n    const onDecrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.max(parsedValue - (shiftKey ? shiftStep : step), minValue));\n        }\n    };\n    const onIncrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.min(parsedValue + (shiftKey ? shiftStep : step), maxValue));\n        }\n    };\n    return (\n        <MuiFormControl fullWidth>\n            <MuiInputLabel>{label}</MuiInputLabel>\n            <LargeInput\n                {...props}\n                value={valueProcessor(value)}\n                onChange={onInputChange}\n                startAdornment={\n                    <MuiInputAdornment position=\"start\">\n                        <MuiIconButton\n                            style={{ marginLeft: -15 }}\n                            aria-label={`Уменьшить`}\n                            onClick={onDecrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <RemoveIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n                endAdornment={\n                    <MuiInputAdornment position=\"end\">\n                        <MuiIconButton\n                            style={{ marginRight: -15 }}\n                            aria-label={`Увеличить`}\n                            onClick={onIncrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <AddIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n            />\n        </MuiFormControl>\n    );\n};\n\nNumberInput.defaultProps = {\n    valueProcessor: (value) => value,\n    minValue: 0,\n    maxValue: Infinity,\n};\n\nNumberInput.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.string,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    step: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nexport default NumberInput;\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU').replace(/\\s/g, '\\u2009');\n}\n\nexport function roundValue(value) {\n    return Math.round(value);\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function removeItem(array, item) {\n    return array.filter((current) => current !== item);\n}\n\nexport function addItemIfNotExists(array, item) {\n    return array.includes(item) ? array : array.concat(item);\n}\n\nexport function removeProperty(object, property) {\n    const result = { ...object };\n    delete result[property];\n    return result;\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatDate = (date) => {\n    const strDate = date.toISOString().substr(0, 10);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n};\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","import { getNextMonth, getDaysCountInYear, getDaysCountBetweenDates, formatDate } from 'src/utils/date';\nimport { roundValue } from 'src/utils/common';\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = new Date();\n\nfunction addFormattedFields(row) {\n    row.dateFormatted = formatDate(row.date);\n    row.paymentRounded = roundValue(row.payment);\n    row.paymentByPercentsRounded = roundValue(row.paymentByPercents);\n    row.paymentByCreditRounded = roundValue(row.paymentByCredit);\n    row.overpaymentRounded = roundValue(row.overpayment);\n    row.creditLeftRounded = roundValue(row.creditLeft);\n}\n\nfunction calculateOnePayment(previousRow, payment, percentage) {\n    const currentRow = {\n        number: previousRow.number + 1,\n        date: getNextMonth(previousRow.date),\n        payment,\n    };\n\n    const daysCountInPreviousYear = getDaysCountInYear(previousRow.date.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(currentRow.date.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда платежный месяц выпадает на границу високосного и невисокоснова годов\n    // В таком случае стоимость одного дня для платежного месяца рассчитывается по разному\n    if (previousRow.date.getMonth() === 11 && daysCountInPreviousYear !== daysCountInCurrentYear) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            previousRow.date,\n            new Date(`${previousRow.date.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth =\n            getDaysCountBetweenDates(new Date(`${currentRow.date.getFullYear()}-01-01`), currentRow.date) + 1;\n\n        const oneDayCreditCostForPreviousMonth = (previousRow.creditLeft * percentage) / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = (previousRow.creditLeft * percentage) / daysCountInCurrentYear;\n\n        paymentByPercents =\n            oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth +\n            oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth;\n    } else {\n        // обычный случай\n        const oneDayCreditCost = (previousRow.creditLeft * percentage) / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(previousRow.date, currentRow.date);\n    }\n\n    // последний платежный месяц\n    if (previousRow.creditLeft <= payment) {\n        currentRow.payment = previousRow.creditLeft + paymentByPercents;\n    }\n\n    const paymentByCredit = currentRow.payment - paymentByPercents;\n\n    currentRow.paymentByPercents = paymentByPercents;\n    currentRow.paymentByCredit = paymentByCredit;\n    currentRow.overpayment = previousRow.overpayment + paymentByPercents;\n    currentRow.creditLeft = previousRow.creditLeft - paymentByCredit;\n\n    addFormattedFields(currentRow);\n\n    return currentRow;\n}\n\nexport default function calculatePayments({ creditSum, creditPercent, paymentPerMonth }) {\n    const paymentSchedule = [];\n    const percentage = creditPercent / 100;\n\n    paymentSchedule[0] = {\n        number: 0,\n        date: startDate,\n        payment: 0,\n        paymentByPercents: 0,\n        paymentByCredit: 0,\n        overpayment: 0,\n        creditLeft: creditSum,\n    };\n\n    addFormattedFields(paymentSchedule[0]);\n\n    let creditLeft = creditSum;\n    let monthCount = 0;\n\n    while (paymentSchedule.length < MAX_MONTHS_COUNT && creditLeft > 0) {\n        const nextPayment = calculateOnePayment(paymentSchedule[monthCount], paymentPerMonth, percentage);\n        paymentSchedule.push(nextPayment);\n        creditLeft = nextPayment.creditLeft;\n        monthCount += 1;\n    }\n\n    const lastRow = paymentSchedule[paymentSchedule.length - 1];\n\n    return {\n        dataByMonths: paymentSchedule,\n        summary: {\n            overpayment: lastRow.overpayment,\n            overpaymentPercent: Math.round((lastRow.overpayment / creditSum) * 100),\n            monthCount: paymentSchedule.length,\n            lastPaymentDate: lastRow.date,\n        },\n    };\n}\n","import { addItemIfNotExists, removeItem, removeProperty } from 'src/utils/common';\nimport calculatePayments from 'src/utils/calculatePayments';\n\nconst SAVE_CREDIT = 'SAVE_CREDIT';\nconst LOCK_FIELD = 'LOCK_FIELD';\nconst ADD_CREDIT = 'ADD_CREDIT';\nconst REMOVE_CREDIT = 'REMOVE_CREDIT';\nconst SET_ACTIVE = 'SET_ACTIVE';\n\nexport function addCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function saveCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function lockField({ name, field, value }) {\n    return {\n        type: LOCK_FIELD,\n        payload: { name, field, value },\n    };\n}\n\nexport function setActive({ name }) {\n    return {\n        type: SET_ACTIVE,\n        payload: { name },\n    };\n}\n\nexport const initialCreditParams = {\n    creditSum: 5000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 50000,\n    months: null,\n    overpayment: null,\n    locked: {\n        creditSum: true,\n        creditPercent: true,\n        paymentPerMonth: true,\n        months: false,\n        overpayment: false,\n    },\n};\n\nconst DEFAULT_NAME = 'default';\n\nexport const initialCredits = {\n    names: [DEFAULT_NAME],\n    active: DEFAULT_NAME,\n    creditByName: {\n        default: { ...initialCreditParams, name: DEFAULT_NAME },\n    },\n    scheduleByName: {\n        default: calculatePayments(initialCreditParams),\n    },\n};\n\nexport default function credits(state = initialCredits, { type, payload }) {\n    switch (type) {\n        case ADD_CREDIT:\n        case SAVE_CREDIT: {\n            const creditParams = { ...payload };\n            return {\n                ...state,\n                names: addItemIfNotExists(state.names, payload.name),\n                creditByName: { ...state.creditByName, [payload.name]: creditParams },\n                scheduleByName: {\n                    ...state.scheduleByName,\n                    [payload.name]: calculatePayments(creditParams),\n                },\n            };\n        }\n        case REMOVE_CREDIT:\n            return {\n                ...state,\n                names: removeItem(state.names, payload.name),\n                creditByName: removeProperty(state.creditByName, payload.name),\n                scheduleByName: removeProperty(state.scheduleByName, payload.name),\n                active: state.active === payload.name ? null : state.active,\n            };\n        case LOCK_FIELD:\n            return {\n                ...state,\n                creditByName: {\n                    ...state.creditByName,\n                    [payload.name]: {\n                        ...state.creditByName[payload.name],\n                        locked: { ...state.creditByName[payload.name].locked, [payload.field]: payload.value },\n                    },\n                },\n            };\n        case SET_ACTIVE:\n            return {\n                ...state,\n                active: payload.name,\n            };\n        default:\n            return state;\n    }\n}\n","import calculatePayments from 'src/utils/calculatePayments';\nimport { initialCreditParams } from 'src/reducers/credits';\n\nconst SET_PAYMENT_SCHEDULE = 'SET_PAYMENT_SCHEDULE';\n\nexport function setPaymentSchedule(data) {\n    return {\n        type: SET_PAYMENT_SCHEDULE,\n        data,\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function paymentSchedule(state = initialState, action) {\n    switch (action.type) {\n        case SET_PAYMENT_SCHEDULE:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MuiBox from '@material-ui/core/Box';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport Box from 'src/components/common/Box';\nimport NumberInput from 'src/components/common/Input/NumberInput';\nimport { saveCredit, setActive } from 'src/reducers/credits';\nimport { setPaymentSchedule } from 'src/reducers/paymentSchedule';\nimport { numConversion, priceFormat } from 'src/utils/common';\n\nexport default function CreditForm({ name }) {\n    const { creditByName, scheduleByName, active } = useSelector(({ credits }) => credits);\n    const creditParams = creditByName[name];\n    const creditSchedule = scheduleByName[name];\n    const isActive = active === creditParams.name;\n    const dispatch = useDispatch();\n\n    const onChange = (field, value) => {\n        if (creditParams.hasOwnProperty(field) && !isNaN(value)) {\n            dispatch(\n                saveCredit({\n                    ...creditParams,\n                    name,\n                    [field]: value,\n                    locked: {\n                        ...creditParams.locked,\n                        [field]: true,\n                    },\n                })\n            );\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(setActive({ name: creditParams.name }));\n        dispatch(setPaymentSchedule(scheduleByName[creditParams.name]));\n    };\n\n    return (\n        <Box elevation={isActive ? 10 : 2}>\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                <MuiGrid container spacing={3} direction=\"column\">\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditPercent}\n                            onChange={(value) => onChange('creditPercent', value)}\n                            label=\"Процентная ставка\"\n                            units=\"%\"\n                            step={0.5}\n                            shiftStep={0.1}\n                            minValue={0}\n                            maxValue={100}\n                            valueProcessor={(value) => Math.round(value * 10) / 10}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditSum}\n                            onChange={(value) => onChange('creditSum', value)}\n                            label=\"Сумма кредита\"\n                            units=\"₽\"\n                            step={500000}\n                            shiftStep={100000}\n                            minValue={50000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.paymentPerMonth}\n                            onChange={(value) => onChange('paymentPerMonth', value)}\n                            label=\"Платёж в месяц\"\n                            units=\"₽\"\n                            step={5000}\n                            shiftStep={1000}\n                            minValue={1000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                            Срок кредита\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h4\">\n                            {creditSchedule.summary.monthCount}&thinsp;\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h5\">\n                            {numConversion(creditSchedule.summary.monthCount, ['месяц', 'месяца', 'месяцев'])}\n                        </MuiTypography>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiBox mt={-2}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Переплата\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h4\">\n                                {priceFormat(creditSchedule.summary.overpayment)}&thinsp;\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h5\">\n                                ₽\n                            </MuiTypography>\n                        </MuiBox>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiButton\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isActive ? 'primary' : 'default'}\n                            fullWidth\n                            type=\"submit\"\n                        >\n                            Рассчитать\n                        </MuiButton>\n                    </MuiGrid>\n                </MuiGrid>\n            </form>\n        </Box>\n    );\n}\n\nCreditForm.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport BoxTitle from 'src/components/common/Box/Title';\nimport CreditForm from 'src/components/CreditForm';\nimport { addCredit } from 'src/reducers/credits';\n\nlet creditNameCounter = 1;\n\nexport default function MultiCreditForm() {\n    const { names, creditByName } = useSelector((state) => state.credits);\n    const dispatch = useDispatch();\n\n    const addOneMoreCredit = () => {\n        dispatch(addCredit({ ...creditByName[names[names.length - 1]], name: `credit${creditNameCounter}` }));\n        creditNameCounter += 1;\n    };\n\n    return (\n        <MuiBox mb={2}>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <MuiGrid container xs={12} spacing={3}>\n                {names.map((name) => (\n                    <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                        <CreditForm name={name} />\n                    </MuiGrid>\n                ))}\n                <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                    <MuiIconButton aria-label={`Добавить кредит`} onClick={addOneMoreCredit}>\n                        <AddCircleIcon fontSize=\"large\" style={{ fontSize: 50 }} color=\"primary\" />\n                    </MuiIconButton>\n                </MuiGrid>\n            </MuiGrid>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiDivider from '@material-ui/core/Divider';\n\nimport 'src/components/common/Summary/Summary.css';\nimport Box from 'src/components/common/Box';\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    return (\n        <Box>\n            <div\n                className={classnames('summary__icon', {\n                    [`summary__icon_${iconType}`]: iconType,\n                })}\n            >\n                {icon}\n            </div>\n            <div className=\"summary__content\">\n                <MuiTypography component=\"h3\" variant=\"h6\" color=\"textSecondary\">\n                    {title}\n                </MuiTypography>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">\n                        {' '}\n                        {units}\n                    </MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className=\"summary__footer\">\n                <MuiTypography component=\"p\" color=\"textSecondary\">\n                    {footer}\n                </MuiTypography>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\n\nexport default function SummaryMonthCount() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Срок кредита\"\n            icon={<MuiEventAvailableIcon fontSize=\"large\" />}\n            value={summary.monthCount}\n            units=\"мес.\"\n            footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n            iconType=\"success\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nimport Summary from 'src/components/common/Summary';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function SummaryOverpayment() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Переплата\"\n            icon={<MuiAttachMoneyIcon fontSize=\"large\" />}\n            value={`${priceFormat(summary.overpayment)}`}\n            units=\"руб.\"\n            footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n            iconType=\"warning\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\n\nexport default function PaymentsChart() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return (\n        <>\n            <BoxTitle>Распределение ежемесячного платежа</BoxTitle>\n            <Box>\n                <div style={{ width: '100%', height: 300 }}>\n                    <ResponsiveContainer>\n                        <BarChart barCategoryGap=\"2%\" data={paymentSchedule.dataByMonths}>\n                            <XAxis dataKey=\"dateFormatted\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar\n                                name=\"На погашение процентов\"\n                                unit=\" руб.\"\n                                dataKey=\"paymentByPercentsRounded\"\n                                stackId=\"a\"\n                                fill=\"#8884d8\"\n                            />\n                            <Bar\n                                name=\"На уменьшение суммы кредита\"\n                                unit=\" руб.\"\n                                dataKey=\"paymentByCreditRounded\"\n                                stackId=\"a\"\n                                fill=\"#82ca9d\"\n                            />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\n\nexport default function OverpaymentChart() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return (\n        <>\n            <BoxTitle>Диаграмма переплаты</BoxTitle>\n\n            <Box>\n                <div style={{ width: '100%', height: 300 }}>\n                    <ResponsiveContainer>\n                        <AreaChart data={paymentSchedule.dataByMonths}>\n                            <XAxis dataKey=\"dateFormatted\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Area name=\"Переплата\" unit=\" руб.\" dataKey=\"overpaymentRounded\" />\n                        </AreaChart>\n                    </ResponsiveContainer>\n                </div>\n            </Box>\n        </>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport 'src/components/PaymentScheduleTable/PaymentScheduleTable.css';\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function PaymentScheduleTable() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return useMemo(\n        () => (\n            <>\n                <BoxTitle>График платежей</BoxTitle>\n                <Box>\n                    <MuiTable size=\"small\" stickyHeader>\n                        <MuiTableHead>\n                            <MuiTableRow>\n                                <MuiTableCell>№</MuiTableCell>\n                                <MuiTableCell>Дата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                                <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                                <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                                <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                            </MuiTableRow>\n                        </MuiTableHead>\n                        <MuiTableBody>\n                            {paymentSchedule.dataByMonths.map((row) => (\n                                <MuiTableRow key={row.number}>\n                                    <MuiTableCell>{row.number}.</MuiTableCell>\n                                    <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                                </MuiTableRow>\n                            ))}\n                        </MuiTableBody>\n                    </MuiTable>\n                </Box>\n            </>\n        ),\n        [paymentSchedule]\n    );\n}\n","import React from 'react';\nimport MuiDashboardIcon from '@material-ui/icons/Dashboard';\nimport MuiBookmarksIcon from '@material-ui/icons/Bookmarks';\n\nimport MainPage from 'src/pages/Main';\nimport SavedCreditsPage from 'src/pages/SavedCredits';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n        menuIcon: <MuiDashboardIcon />,\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n        menuIcon: <MuiBookmarksIcon />,\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport MultiCreditForm from 'src/components/MultiCreditForm';\nimport SummaryMonthCount from 'src/components/SummaryMonthCount';\nimport SummaryOverpayment from 'src/components/SummaryOverpayment';\nimport PaymentsChart from 'src/components/PaymentsChart';\nimport OverpaymentChart from 'src/components/OverpaymentChart';\nimport PaymentScheduleTable from 'src/components/PaymentScheduleTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MultiCreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={6} lg={6}>\n                    <SummaryMonthCount />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={6} lg={6}>\n                    <SummaryOverpayment />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <OverpaymentChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentsChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentScheduleTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\n\nimport routes from 'src/routes';\n\nexport default function Header() {\n    return (\n        <MuiBox mb={4}>\n            <MuiAppBar position=\"static\">\n                <MuiToolbar>\n                    <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\">\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route key={index} path={route.path} exact>\n                                    {route.title}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </MuiTypography>\n                </MuiToolbar>\n            </MuiAppBar>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MuiDivider from '@material-ui/core/Divider';\nimport MuiList from '@material-ui/core/List';\nimport MuiDrawer from '@material-ui/core/Drawer/Drawer';\nimport MuiListItem from '@material-ui/core/ListItem';\nimport MuiListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport MuiListItemText from '@material-ui/core/ListItemText/ListItemText';\n\nimport 'src/components/Menu/Menu.css';\nimport routes from 'src/routes';\n\nexport default function Menu() {\n    return (\n        <MuiDrawer variant=\"permanent\" className=\"menu\" open={true}>\n            <div className=\"menu__toolbar\" />\n            <MuiDivider />\n            <MuiList>\n                {routes.map((route, index) => (\n                    <MuiListItem key={index} button component={Link} to={route.path}>\n                        <MuiListItemIcon>{route.menuIcon}</MuiListItemIcon>\n                        <MuiListItemText primary={route.title} />\n                    </MuiListItem>\n                ))}\n            </MuiList>\n        </MuiDrawer>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4} mb={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'src/App.css';\n\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport routes from 'src/routes';\nimport Header from 'src/components/Header';\nimport Menu from 'src/components/Menu';\nimport Footer from 'src/components/Footer';\n\nexport default function Dashboard() {\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <MuiCssBaseline />\n                <Menu />\n                <div className=\"app-content\">\n                    <Header />\n                    <main>\n                        <MuiContainer maxWidth=\"lg\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route key={index} path={route.path} exact>\n                                        {route.component}\n                                    </Route>\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </MuiContainer>\n                    </main>\n                </div>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'src/index.css';\nimport App from 'src/App';\n\nimport configureStore from 'src/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import { createStore, combineReducers } from 'redux';\nimport credits from 'src/reducers/credits';\nimport paymentSchedule from 'src/reducers/paymentSchedule';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            credits,\n            paymentSchedule,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}